{"version":3,"sources":["dev/pages/default/index.js","dev/pages/submission-prototype/content-card/ContentListItem.js","dev/pages/submission-prototype/content-card/NewContentListItem.js","dev/pages/submission-prototype/content-card/ContentListContainer.js","dev/pages/submission-prototype/content-card/ContentTileItem.js","dev/pages/submission-prototype/content-card/NewContentTileItem.js","dev/pages/submission-prototype/content-card/ContentTileContainer.js","dev/pages/submission-prototype/content-card/ContentCard.js","dev/pages/submission-prototype/content-card/ContentCardController.js","dev/pages/submission-prototype/index.js","dev/pages/webrtc/index.js","dev/pages/launch/defaults.js","dev/pages/launch/LaunchWrapper.js","dev/pages/launch/index.js","dev/routes.js"],"names":["Default","Component","PROCESSING_STATUS","Contentlist","contentItem","mainContent","isProcessing","className","MATERIAL_ICONS","HOURGLASS_EMPTY","type","DESCRIPTION","PHOTO","LINK","VIDEOCAM","EVENT","media","processingStatus","name","isIncluded","cx","enabled","onClick","setTimeout","props","onChangeIncluded","id","DONE_ALL","OPEN_URL","OPEN_IN_NEW","PREVIEW","ANALYSIS","ASSESSMENT","SEP","actions","menuItems","primaryText","leftIcon","EDIT","DOWNLOAD","DELETE","icon","MENU_VERT","checked","this","renderPrimaryActions","renderIcon","renderName","renderSecondaryActions","renderOverflowActions","React","PureComponent","propTypes","PropTypes","object","defaultProps","DEFAULT_STATE","showChooser","NewContentListItem","setState","state","CLOSE","primary","onAddClick","ADD_CIRCLE","renderHeader","renderMain","renderFooter","TileElement","content","Paper","zDepth","renderChooser","renderAddContent","ContentListContainer","ContentListItem","key","allowCreation","contentItems","_","map","renderContentListItem","bool","array","isFlipped","ContentTileItem","imageUrl","src","showControls","isLocked","property","value","attr","index","label","attributes","renderAttribute","renderDetails","NewContentTileItem","ContentTileContainer","renderContentTile","VIEW_TILE","VIEW_LIST","currentView","ContentCard","isTileView","renderTileContainer","renderListContainer","hasItems","length","renderIncludedContainerMessage","INFO_OUTLINE","onToggleView","VIEW_MODULE","groupBy","excludedContentItems","false","includedContentItems","true","title","renderCardActions","renderExcludedContainer","renderIncludedContainer","IMAGE_MIME_TYPES","RESULT_PARTIAL_TYPENAME_MAPPING","ActivityResultPartialDocument","ActivityResultPartialLink","ActivityResultPartialMedia","ActivityResultPartialMeeting","ContentCardController","activityData","merge","myData","resultPartials","translateResultPartial","resultPartial","translateType","dbId","Boolean","finalizedAt","translatePreviewUrl","getAttributes","attrs","push","mimeType","link","Date","scheduledAt","contentType","__typename","includes","unescape","previewUrl","match","e","getContentCardProps","data","newContentItems","SubmissionPrototypePage","MockActivityData","activity","AUDIO_THRESHOLD","ACTIVITY_ID","QUESTION_ID","MODES","SIMPLE","WEBRTC","modeMenuItems","WebRTC","destroyVideo","audioLevel","currentMode","videoTrack","audioTrack","constraintThresholds","constraintSucceessCount","initBasicCamera","initWebRTC","getUserMedia","stream","handleSuccess","initUploadStrategy","navigator","mediaDevices","enumerateDevices","devices","forEach","device","console","log","microphoneId","cameraId","cameraStream","localStreams","STREAM_NAMES","CAMERA","microphoneStream","MICROPHONE","getMicrophoneId","audio","getCameraId","video","settingsArgs","activityDbId","mediaType","questionDbId","RecorderService","getSettings","settings","initUploader","getDevicesList","currentlyUsedDevices","getCameraStream","localStream","active","cameraDeviceId","microphoneDeviceId","uploader","addStream","destroy","StreamGetter","mediaStream","getStream","Stream","streamName","document","getElementById","attachVideoToElement","initAudioAnalyser","pc","getStats","then","results","res","kind","getWebRTCStats","recorderSettings","WebRtcUploadStrategy","recorderType","i18n","init","catch","on","UPLOADER_EVENTS","INITIALIZED","initStreams","REQUEST_NEW_STREAMS","STREAM_ADDED","srcObject","NOTIFICATION","RESET_STREAMS","RECORDING_PAUSED","RECORDING_RESUMED","RECORDING_STARTED","PREVIEW_IS_READY","previews","RECORDING_STOPPED","UPLOAD_FINISHED","UPLOADING_PROGRESS","percent","sampleRate","getVideoTracks","getAudioTracks","previousSampleRate","i","constraints","applyConstraints","JSON","stringify","window","audioAnalyzer","AudioAnalyzer","onAudioLevelInfo","mode","resetVideo","supportedConstraints","capabilitiesV","constraintsV","settingsV","getSupportedConstraints","getCapabilities","getConstraints","capabilitiesA","constraintsA","settingsA","autoPlay","playsInline","onChange","onModeChange","toFixed","threshold","withI18n","connect","FRAME_SOURCE","process","QS","URLSearchParams","location","search","LAUNCHPOINT_SETTTINGS","KEYS","VIEW_TYPE","get","VIEW_TYPES","ACTIVITIES","CONTEXT_USER_TYPE","CONTEXT_CLASS_ID","CONTEXT_ACTIVITY_ID","CUSTOMIZATION_SETTTINGS","capabilities","preferences","theme","colors","typography","LaunchWrapper","iframe","path","DEFAULTS","desiredLocation","customizationSettings","isConfigVisible","desiredData","launchpointSettings","event","settingsContainerRef","current","settingsElement","target","contains","closeSettingConfigs","route","RegExp","pathPrefix","storedLaunchpointSettings","CustomizationService","getLaunchpointSettings","writeLaunchpointSettings","newSrc","keyCode","launchNewPath","newValue","newLaunchpointData","parse","changeFrameSource","newCustomizationData","writeCustomizationSettings","setLaunchpointRouteOverride","hostname","port","protocol","open","extractRouteFromLocation","iframeRef","createRef","pathTextRef","basename","dataset","trimEnd","initLaunchpointSettings","initCustomizationSettings","iframeElement","getField","addEventListener","onPathTextKeyDown","setInterval","newPath","contentWindow","pathname","error","onWindowClick","storedSettings","explicitRouteOverride","getCustomizationSettings","pathTextValue","pathTextClasses","launchpointSettingsConfigValue","customizationSettingsConfigValue","flat","onHomeClick","onOpenInNewClick","ref","onLocationTextChange","placeholder","disabled","onLaunchpointSettingsClick","onLaunchpointSettingsConfigChange","rows","maxRows","onApplyLaunchpointSettings","onCustomizationSettingsClick","onCustomizationSettingsConfigChange","onApplyCustomizationSettings","frameBorder","scrolling","allow","Launch","SubmissionPrototype"],"mappings":"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","file":"static/js/main-dev.1eba988c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Default extends Component {\n  render() {\n    return (<div>Placeholder for dev/test routes</div>);\n  }\n}\n\nexport default Default;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n// import _ from 'lodash';\n\n// import BONGO_ICONS from 'common/constants/bongo-icon-fonts';\nimport MATERIAL_ICONS from 'common/constants/material-icon-fonts';\nimport { MenuButton, IconButton, RaisedButton } from 'common/components/button';\nimport { Switch } from 'common/components/switch';\nimport { FontIcon } from 'common/components/icon';\nimport './styles.scss';\n\nconst PROCESSING_STATUS = 'PROCESSING_STATUS__IN_PROGRESS';\n\nclass Contentlist extends React.PureComponent {\n  renderIcon = (contentItem) => {\n    let mainContent = null;\n\n    if (this.isProcessing(contentItem)) {\n      mainContent = <FontIcon className={`content-list-item-type-icon`}>{MATERIAL_ICONS.HOURGLASS_EMPTY}</FontIcon>;\n    } else {\n      switch (contentItem.type) {\n        case 'DOCUMENT':\n          mainContent = <FontIcon className={`content-list-item-type-icon`}>{MATERIAL_ICONS.DESCRIPTION}</FontIcon>;\n          break;\n        case 'IMAGE':\n          mainContent = <FontIcon className={`content-list-item-type-icon`}>{MATERIAL_ICONS.PHOTO}</FontIcon>;\n          break;\n        case 'LINK':\n          mainContent = <FontIcon className={`content-list-item-type-icon`}>{MATERIAL_ICONS.LINK}</FontIcon>;\n          break;\n        case 'VIDEO':\n          mainContent = <FontIcon className={`content-list-item-type-icon`}>{MATERIAL_ICONS.VIDEOCAM}</FontIcon>;\n          break;\n        case 'MEETING':\n          mainContent = <FontIcon className={`content-list-item-type-icon`}>{MATERIAL_ICONS.EVENT}</FontIcon>;\n          // mainContent = (<FontIcon className={`content-list-itemtype-icon`} iconClassName={BONGO_ICONS.CALENDAR}></FontIcon>);\n          break;\n      }\n    }\n\n    return <div className={`content-list-item-icon`}>{mainContent}</div>;\n  };\n\n  isProcessing = (contentItem) => {\n    return contentItem.media && contentItem.media.processingStatus === PROCESSING_STATUS;\n  };\n\n  renderName = (contentItem) => {\n    if (this.isProcessing(contentItem)) {\n      return (\n        <div className={`content-list-item-name`}>\n          <h4 className={`content-list-item-name--label`}>{`Processing...`}</h4>\n          <span className={`content-list-item-name--desc`}>\n            <span className={`content-list-item-name--desc-name`}>{contentItem.name}</span>\n            {` will be available once we are done processing it.`}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`content-list-item-name`}>\n        <h4 className={`content-list-item-name--label`}>{contentItem.name}</h4>\n      </div>\n    );\n  };\n\n  renderPrimaryActions = (contentItem) => {\n    const { isIncluded } = contentItem;\n\n    return (\n      <div className={cx(`content-list-item-actions`, `content-list-item-actions--primary`)}>\n        {/* <div\n          className={`content-list-item-actions--include-exclude`}\n          onClick={() => {\n            this.props.onChangeIncluded({ id: contentItem.id, isIncluded: !isIncluded });\n          }}\n        >\n          <FontIcon>{isIncluded ? `star` : 'star_border'}</FontIcon>\n        </div> */}\n        <RaisedButton\n          enabled={!this.isProcessing(contentItem)}\n          className={cx(`content-list-item-actions--button-done`)}\n          onClick={() => {\n            setTimeout(() => {\n              this.props.onChangeIncluded({ id: contentItem.id, isIncluded: !isIncluded });\n            }, 1000);\n          }}\n        >\n          <FontIcon>{isIncluded ? `eject` : MATERIAL_ICONS.DONE_ALL}</FontIcon>\n        </RaisedButton>\n      </div>\n    );\n  };\n\n  renderSecondaryActions = (contentItem) => {\n    const OPEN_URL = <IconButton>{MATERIAL_ICONS.OPEN_IN_NEW}</IconButton>;\n    const PREVIEW = <IconButton>{MATERIAL_ICONS.PREVIEW}</IconButton>;\n    const ANALYSIS = <IconButton>{MATERIAL_ICONS.ASSESSMENT}</IconButton>;\n    const SEP = <div className={'item-sep'} />;\n\n    let actions = [];\n\n    if (this.isProcessing(contentItem)) {\n      actions = [SEP];\n    } else {\n      switch (contentItem.type) {\n        case 'DOCUMENT':\n          actions = [PREVIEW, SEP];\n          break;\n        case 'IMAGE':\n          actions = [PREVIEW, SEP];\n          break;\n        case 'LINK':\n          actions = [OPEN_URL, SEP];\n          break;\n        case 'VIDEO':\n          actions = [ANALYSIS, PREVIEW, SEP];\n          break;\n        case 'MEETING':\n          actions = [PREVIEW, SEP];\n          break;\n      }\n    }\n\n    return <div className={cx(`content-list-item-actions`, `content-list-item-actions--secondary`)}>{actions}</div>;\n  };\n\n  renderOverflowActions = (contentItem) => {\n    const menuItems = [\n      {\n        primaryText: `Edit`,\n        onClick: () => {},\n        leftIcon: <FontIcon>{MATERIAL_ICONS.EDIT}</FontIcon>,\n      },\n      {\n        primaryText: `Download`,\n        onClick: () => {},\n        leftIcon: <FontIcon>{MATERIAL_ICONS.DOWNLOAD}</FontIcon>,\n      },\n      {\n        primaryText: `Delete`,\n        onClick: () => {},\n        leftIcon: <FontIcon>{MATERIAL_ICONS.DELETE}</FontIcon>,\n      },\n    ];\n\n    return (\n      <MenuButton enabled={!this.isProcessing(contentItem)} icon menuItems={menuItems}>\n        {MATERIAL_ICONS.MENU_VERT}\n      </MenuButton>\n    );\n  };\n\n  renderFooter = (contentItem) => {\n    return (\n      <div className={`content-list-item-footer`}>\n        <div className={`content-list-item-footer--label`}>{contentItem.isIncluded ? `Included` : `Excluded`}</div>\n        <Switch className={`content-list-item-footer--switch`} checked={contentItem.isIncluded} />\n      </div>\n    );\n  };\n\n  render() {\n    const { contentItem } = this.props;\n    const { isIncluded } = contentItem;\n\n    return (\n      <div\n        className={cx(\n          `content-list-item`,\n          `content-list-item--${isIncluded ? `included` : `excluded`}`,\n          contentItem.media && contentItem.media.processingStatus === PROCESSING_STATUS && `content-list-item--processing`\n        )}\n      >\n        {this.renderPrimaryActions(contentItem)}\n        {this.renderIcon(contentItem)}\n        {this.renderName(contentItem)}\n        {/* <IconButton>{MATERIAL_ICONS.EXPAND}</IconButton> */}\n        {this.renderSecondaryActions(contentItem)}\n        {this.renderOverflowActions(contentItem)}\n      </div>\n    );\n  }\n}\n\nContentlist.propTypes = {\n  contentItem: PropTypes.object,\n};\n\nContentlist.defaultProps = {\n  contentItem: {},\n};\n\nexport default Contentlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n// import _ from 'lodash';\n\nimport MATERIAL_ICONS from 'common/constants/material-icon-fonts';\nimport { IconButton, FlatButton } from 'common/components/button';\nimport { FontIcon } from 'common/components/icon';\nimport { Paper } from 'common/components/paper';\n\nimport './styles.scss';\n\nconst DEFAULT_STATE = {\n  showChooser: false,\n};\n\nclass NewContentListItem extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...DEFAULT_STATE,\n    };\n  }\n\n  onAddClick = () => {\n    this.setState({\n      showChooser: true,\n    });\n  };\n\n  renderHeader = () => {\n    if (!this.state.showChooser) return;\n\n    return (\n      <div className={`new-content-list-item-header`}>\n        <h3 className={`new-content-list-item-header--label`}>{`Add...`}</h3>\n        <div className={`new-content-list-item-header--actions`}>\n          <IconButton\n            onClick={() => {\n              this.setState({ showChooser: false });\n            }}\n          >\n            {MATERIAL_ICONS.CLOSE}\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n\n  renderMain = () => {\n    return (\n      <div className={`new-content-list-item-main`}>\n        <div className={`new-content-list-item-main--chooser`}>\n          <div className={`new-content-list-item-main--chooser-row`}>\n          <FlatButton primary className={`new-content-list-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.VIDEOCAM}</FontIcon>\n                <span>{`Video`}</span>\n              </>\n            </FlatButton>\n            <FlatButton primary className={`new-content-list-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.DESCRIPTION}</FontIcon>\n                <span>{`File`}</span>\n              </>\n            </FlatButton>\n            <FlatButton primary className={`new-content-list-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.LINK}</FontIcon>\n                <span>{`Link`}</span>\n              </>\n            </FlatButton>\n            <FlatButton primary className={`new-content-list-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.EVENT}</FontIcon>\n                <span>{`Meeting`}</span>\n              </>\n            </FlatButton>\n            {/* <div className={`new-content-list-item-main--sep`}></div> */}\n            <FlatButton primary className={`new-content-list-item-main--chooser-button`}>\n              <>\n                <FontIcon>{`merge_type`}</FontIcon>\n                <span>{`Combined Video`}</span>\n              </>\n            </FlatButton>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  renderFooter = () => {\n    return <div className={`new-content-list-item-footer`}>{/* <div className={`new-content-list-item-footer--label`}>{`Add...`}</div> */}</div>;\n  };\n\n  renderAddContent = () => {\n    return (\n      <FlatButton className={`new-content-list-item--add-content-button`} onClick={this.onAddClick}>\n        <FontIcon className={`new-content-list-item--icon`}>{MATERIAL_ICONS.ADD_CIRCLE}</FontIcon>\n        <div className={`new-content-list-item--text`}>{`Add...`}</div>\n      </FlatButton>\n    );\n  };\n\n  renderChooser = () => {\n    return (\n      <>\n        {this.renderHeader()}\n        {this.renderMain()}\n        {this.renderFooter()}\n      </>\n    );\n  };\n\n  render() {\n    const { showChooser } = this.state;\n\n    let TileElement = 'div';\n    let props = {\n      className: cx([`content-list-item`, `new-content-list`, `new-content-list-item--${showChooser ? 'chooser' : 'default'}`]),\n    };\n    let content = null;\n\n    if (showChooser) {\n      TileElement = Paper;\n      props.zDepth = 1;\n      content = this.renderChooser();\n    } else {\n      content = this.renderAddContent();\n    }\n\n    return <TileElement {...props}>{content}</TileElement>;\n  }\n}\n\nNewContentListItem.propTypes = {};\n\nNewContentListItem.defaultProps = {};\n\nexport default NewContentListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\n// import MATERIAL_ICONS from 'common/constants/material-icon-fonts';\n\nimport ContentListItem from './ContentListItem';\nimport NewContentListItem from './NewContentListItem';\n\nimport \"./styles.scss\";\n\nconst DEFAULT_STATE = {};\n\nclass ContentListContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...DEFAULT_STATE\n    };\n  }\n\n  renderContentListItem = (contentItem) => {\n    return <ContentListItem key={`content-list-item[${contentItem.id}]`} contentItem={contentItem} onChangeIncluded={this.props.onChangeIncluded}  />;\n  };\n\n  render() {\n    const { allowCreation, contentItems } = this.props;\n\n    return (\n      <div className={`content-list-container`}>\n        {allowCreation ? <NewContentListItem /> : null}\n        {_.map(contentItems, this.renderContentListItem)}\n      </div>\n    );\n  }\n}\n\nContentListContainer.propTypes = {\n  allowCreation: PropTypes.bool,\n  contentItems: PropTypes.array,\n};\n\nContentListContainer.defaultProps = {\n  allowCreation: false,\n  contentItems: [],\n};\n\nexport default ContentListContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n// import _ from 'lodash';\n\n// import BONGO_ICONS from 'common/constants/bongo-icon-fonts';\nimport MATERIAL_ICONS from 'common/constants/material-icon-fonts';\nimport Button from 'common/components/button/Button';\nimport { IconButton, FlatButton } from 'common/components/button';\nimport { Switch } from 'common/components/switch';\nimport { FontIcon } from 'common/components/icon';\nimport { Paper } from 'common/components/paper';\nimport VideoContainer from 'educator/activity/common/activity-form/partials/common/video-container';\nimport './styles.scss';\n\nconst DEFAULT_STATE = {\n  isFlipped: false,\n};\n\nclass ContentTileItem extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...DEFAULT_STATE,\n    };\n  }\n\n  componentDidMount() {}\n  componentWillUnmount() {}\n  onTransitionEnd = () => {\n    //todo\n  };\n\n  renderHeader = (contentItem) => {\n    return (\n      <div className={`content-tile-item-header`}>\n        <h4 className={`content-tile-item-header--label`}>{contentItem.name}</h4>\n        <div className={`content-tile-item-header--actions`}>\n          <IconButton>{MATERIAL_ICONS.MENU_VERT}</IconButton>\n        </div>\n      </div>\n    );\n  };\n\n  renderMain = (contentItem) => {\n    let mainContent = null;\n    switch (contentItem.type) {\n      case 'DOCUMENT':\n        mainContent = <FontIcon className={`content-tile-item-type-icon`}>{MATERIAL_ICONS.DESCRIPTION}</FontIcon>;\n        break;\n      case 'IMAGE':\n        if (contentItem.imageUrl) {\n          mainContent = <img className={`content-tile-item-type-image`} src={`${contentItem.imageUrl}`} />;\n        } else {\n          mainContent = <FontIcon className={`content-tile-item-type-icon`}>{MATERIAL_ICONS.PHOTO}</FontIcon>;\n        }\n        break;\n      case 'LINK':\n        mainContent = <FontIcon className={`content-tile-item-type-icon`}>{MATERIAL_ICONS.LINK}</FontIcon>;\n        break;\n      case 'VIDEO':\n        // mainContent = (<FontIcon className={`content-tile-item-type-icon`}>{MATERIAL_ICONS.VIDEOCAM}</FontIcon>);\n        mainContent = <VideoContainer id='assignment-settings-instructions-video-container' showControls={false} media={contentItem.media} isLocked={true} />;\n        break;\n      case 'MEETING':\n        mainContent = <FontIcon className={`content-tile-item-type-icon`}>{MATERIAL_ICONS.EVENT}</FontIcon>;\n        // mainContent = (<FontIcon className={`content-tile-item-type-icon`} iconClassName={BONGO_ICONS.CALENDAR}></FontIcon>);\n        break;\n    }\n    return <div className={`content-tile-item-main`}>{mainContent}</div>;\n  };\n\n  renderDetailItem = (contentItem, property) => {\n    const value = contentItem[property];\n    if (!value) return null;\n\n    return <div className={`content-tile-item-detail-item`}>{`${value}`}</div>;\n  };\n  renderAttribute = (attr, index) => {\n    if (!attr.value) return null;\n\n    return <div key={`content-tile-item-detail-item[${index}]`} className={`content-tile-item-detail-item`}>{`${attr.label}: ${attr.value}`}</div>;\n  };\n\n  renderDetails = (contentItem) => {\n    return (\n      <div className={`content-tile-item-details`}>\n        {/* {this.renderDetailItem(contentItem, 'name')} */}\n        {_.map(contentItem.attributes, this.renderAttribute)}\n      </div>\n    );\n  };\n\n  renderActions = (contentItem) => {\n    const OPEN_URL = <IconButton>{MATERIAL_ICONS.OPEN_IN_NEW}</IconButton>;\n    const PREVIEW = <IconButton>{MATERIAL_ICONS.PREVIEW}</IconButton>;\n    const DOWNLOAD = <IconButton>{MATERIAL_ICONS.DOWNLOAD}</IconButton>;\n    const ANALYSIS = <IconButton>{MATERIAL_ICONS.ASSESSMENT}</IconButton>;\n    let actions = [];\n    switch (contentItem.type) {\n      case 'DOCUMENT':\n        actions = [PREVIEW, DOWNLOAD];\n        break;\n      case 'IMAGE':\n        actions = [PREVIEW, DOWNLOAD];\n        break;\n      case 'LINK':\n        actions = [OPEN_URL];\n        break;\n      case 'VIDEO':\n        actions = [PREVIEW, DOWNLOAD, ANALYSIS];\n        break;\n      case 'MEETING':\n        actions = [PREVIEW, DOWNLOAD];\n        break;\n    }\n\n    return <div className={`content-tile-item-actions`}>{actions}</div>;\n  };\n\n  renderFooter = (contentItem) => {\n    const { isIncluded } = contentItem;\n    return (\n      <div className={cx(`content-tile-item-footer`)}>\n        <FlatButton\n          className={cx(`content-tile-item-footer-button`)}\n          onClick={() => {\n            this.setState({\n              isFlipped: true,\n            });\n            setTimeout(() => {\n              this.props.onChangeIncluded({ id: contentItem.id, isIncluded: !isIncluded });\n            }, 1000);\n          }}\n        >\n          <FontIcon>{isIncluded ? `eject` : MATERIAL_ICONS.DONE_ALL}</FontIcon>\n        </FlatButton>\n      </div>\n    );\n  };\n\n  render() {\n    const { isFlipped } = this.state;\n    const { contentItem } = this.props;\n    const { isIncluded } = contentItem;\n    return (\n      <Paper className={cx(`content-tile`, `content-tile-item--${isIncluded ? `included` : `excluded`}`, `content-tile-item--${isFlipped ? `flipped` : ``}`)} zDepth={1}>\n        {this.renderHeader(contentItem)}\n        {this.renderMain(contentItem)}\n        {/* {this.renderActions(contentItem)} */}\n        {this.renderDetails(contentItem)}\n        {this.renderFooter(contentItem)}\n      </Paper>\n    );\n  }\n}\n\nContentTileItem.propTypes = {\n  contentItem: PropTypes.object,\n};\n\nContentTileItem.defaultProps = {\n  contentItem: {},\n};\n\nexport default ContentTileItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n// import _ from 'lodash';\n\nimport MATERIAL_ICONS from 'common/constants/material-icon-fonts';\nimport { IconButton, FlatButton } from 'common/components/button';\nimport { FontIcon } from 'common/components/icon';\nimport { Paper } from 'common/components/paper';\n\nimport './styles.scss';\n\nconst DEFAULT_STATE = {\n  showChooser: false,\n};\n\nclass NewContentTileItem extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...DEFAULT_STATE,\n    };\n  }\n\n  onAddClick = () => {\n    this.setState({\n      showChooser: true,\n    });\n  };\n\n  renderHeader = () => {\n    if (!this.state.showChooser) return;\n\n    return (\n      <div className={`new-content-tile-item-header`}>\n        <h3 className={`new-content-tile-item-header--label`}>{`Add...`}</h3>\n        <div className={`new-content-tile-item-header--actions`}>\n          <IconButton\n            onClick={() => {\n              this.setState({ showChooser: false });\n            }}\n          >\n            {MATERIAL_ICONS.CLOSE}\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n\n  renderMain = () => {\n    return (\n      <div className={`new-content-tile-item-main`}>\n        <div className={`new-content-tile-item-main--chooser`}>\n          <div className={`new-content-tile-item-main--chooser-row`}>\n            <FlatButton primary className={`new-content-tile-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.DESCRIPTION}</FontIcon>\n                <span>{`File`}</span>\n              </>\n            </FlatButton>\n            <FlatButton primary className={`new-content-tile-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.VIDEOCAM}</FontIcon>\n                <span>{`Video`}</span>\n              </>\n            </FlatButton>\n          </div>\n\n          <div className={`new-content-tile-item-main--chooser-row`}>\n            <FlatButton primary className={`new-content-tile-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.LINK}</FontIcon>\n                <span>{`Link`}</span>\n              </>\n            </FlatButton>\n            <FlatButton primary className={`new-content-tile-item-main--chooser-button`}>\n              <>\n                <FontIcon>{MATERIAL_ICONS.EVENT}</FontIcon>\n                <span>{`Meeting`}</span>\n              </>\n            </FlatButton>\n          </div>\n\n          <div className={`new-content-tile-item-main--chooser-row new-content-tile-item-main--single-chooser-row`}>\n            <FlatButton primary className={`new-content-tile-item-main--chooser-button new-content-tile-item-main--single-button`}>\n              <>\n                <FontIcon>{`merge_type`}</FontIcon>\n                <span>{`Combined Video`}</span>\n              </>\n            </FlatButton>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  renderFooter = () => {\n    return <div className={`new-content-tile-item-footer`}>{/* <div className={`new-content-tile-item-footer--label`}>{`Add...`}</div> */}</div>;\n  };\n\n  renderAddContent = () => {\n    return (\n      <FlatButton className={`new-content-tile-item--add-content-button`} onClick={this.onAddClick}>\n        <div className={`new-content-tile-item--top-text`} />\n        <FontIcon className={`new-content-tile-item--icon`}>{MATERIAL_ICONS.ADD_CIRCLE}</FontIcon>\n        <div className={`new-content-tile-item--bottom-text`}>\n          {`Add...`}\n          <br />\n          {/* {`Contenzt`} */}\n        </div>\n      </FlatButton>\n    );\n  };\n\n  renderChooser = () => {\n    return (\n      <>\n        {this.renderHeader()}\n        {this.renderMain()}\n        {this.renderFooter()}\n      </>\n    );\n  };\n\n  render() {\n    const { showChooser } = this.state;\n\n    let TileElement = 'div';\n    let props = {\n      className: cx([`content-tile`, `new-content-tile`, `new-content-tile-item--${showChooser ? 'chooser' : 'default'}`]),\n    };\n    let content = null;\n\n    if (showChooser) {\n      TileElement = Paper;\n      props.zDepth = 1;\n      content = this.renderChooser();\n    } else {\n      content = this.renderAddContent();\n    }\n\n    return <TileElement {...props}>{content}</TileElement>;\n  }\n}\n\nNewContentTileItem.propTypes = {};\n\nNewContentTileItem.defaultProps = {};\n\nexport default NewContentTileItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport ContentTileItem from './ContentTileItem';\nimport NewContentTileItem from './NewContentTileItem';\n\nimport './styles.scss';\n\nconst DEFAULT_STATE = {};\n\nclass ContentTileContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...DEFAULT_STATE,\n    };\n  }\n\n  renderContentTile = (contentItem) => {\n    return <ContentTileItem key={`content-tile-item[${contentItem.id}]`} contentItem={contentItem} onChangeIncluded={this.props.onChangeIncluded} />;\n  };\n\n  render() {\n    const { allowCreation, contentItems } = this.props;\n\n    return (\n      <div className={`content-tile-container`}>\n        {allowCreation ? <NewContentTileItem /> : null}\n        {_.map(contentItems, this.renderContentTile)}\n      </div>\n    );\n  }\n}\n\nContentTileContainer.propTypes = {\n  allowCreation: PropTypes.bool,\n  contentItems: PropTypes.array,\n};\n\nContentTileContainer.defaultProps = {\n  allowCreation: false,\n  contentItems: [],\n};\n\nexport default ContentTileContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n// import _ from 'lodash';\n\nimport MATERIAL_ICONS from 'common/constants/material-icon-fonts';\nimport { Card, CardTitle, CardBody } from 'common/components/card';\nimport { Paper } from 'common/components/paper';\nimport { IconButton, RaisedButton } from 'common/components/button';\nimport { FontIcon } from 'common/components/icon';\n\nimport ContentListContainer from './ContentListContainer';\nimport ContentTileContainer from './ContentTileContainer';\n\nimport './styles.scss';\n\nconst VIEW_TILE = 'tile';\nconst VIEW_LIST = 'list';\nconst DEFAULT_STATE = {\n  currentView: VIEW_LIST,\n};\n\nclass ContentCard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...DEFAULT_STATE,\n    };\n  }\n\n  onToggleView = () => {\n    const { currentView } = this.state;\n    this.setState({\n      currentView: currentView === VIEW_TILE ? VIEW_LIST : VIEW_TILE,\n    });\n  };\n\n  renderListContainer = (contentItems, allowCreation) => {\n    return <ContentListContainer contentItems={contentItems} allowCreation={allowCreation} onChangeIncluded={this.props.onChangeIncluded} />;\n  };\n\n  renderTileContainer = (contentItems, allowCreation) => {\n    return <ContentTileContainer contentItems={contentItems} allowCreation={allowCreation} onChangeIncluded={this.props.onChangeIncluded} />;\n  };\n\n  renderExcludedContainer = (contentItems = []) => {\n    const { currentView } = this.state;\n\n    const isTileView = currentView === VIEW_TILE;\n\n    return (\n      <div className={cx(`content-card-container`, `content-card-container--excluded`, `content-card-container--${isTileView ? 'tile' : 'list'}`)}>\n        <div className={`content-card-container-header`}>{/* <h2 className={`content-card-container-header--label`}>{`Work In Progress`}</h2> */}</div>\n        {isTileView ? this.renderTileContainer(contentItems, true) : this.renderListContainer(contentItems, true)}\n      </div>\n    );\n  };\n\n  renderIncludedContainer = (contentItems = []) => {\n    const { currentView } = this.state;\n\n    const isTileView = currentView === VIEW_TILE;\n    const hasItems = contentItems.length > 0;\n\n    return (\n      <Paper className={cx(`content-card-container`, `content-card-container--included`, `content-card-container--${isTileView ? 'tile' : 'list'}`)} zDepth={1}>\n        <div className={`content-card-container--header`}>\n          <h2 className={`content-card-container--header-label`}>{`Submission`}</h2>\n        </div>\n        {this.renderIncludedContainerMessage(hasItems)}\n        {isTileView ? this.renderTileContainer(contentItems, false) : this.renderListContainer(contentItems, false)}\n        <div className={`content-card-container--footer`}>\n          <RaisedButton className={`content-card-container--footer-button`} primary enabled={hasItems}>\n            {`Submit`}\n          </RaisedButton>\n          {/* <div className={`content-card-container--footer-label`}>\n            {`You have`}\n            <span>{contentItems.length}</span>\n            {`items in your submission`}\n          </div> */}\n        </div>\n      </Paper>\n    );\n  };\n\n  renderIncludedContainerMessage = (hasItems) => {\n    if (hasItems) {\n      return (\n        <div className={`content-card-container--banner`}>\n          <FontIcon className={`content-card-container--banner-icon`}>{MATERIAL_ICONS.INFO_OUTLINE}</FontIcon>\n          <div className={`content-card-container--banner-label`}>{`Your content has not been submitted yet. When you are comfortable with the content included below, click the 'Submit' button`}</div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`content-card-container--message`}>\n          <div className={`content-card-container--message-wrapper`}>\n            <FontIcon className={`content-card-container--message-icon`}>{MATERIAL_ICONS.INFO_OUTLINE}</FontIcon>\n            <div className={`content-card-container--message-label`}>\n              <div><span>{`You do not have any content included for submission yet.`}</span></div>\n              <div>\n                <span>Add your content above &mdash; click the&nbsp;<FontIcon>{`star_border`}</FontIcon>&nbsp;when you are ready to include it in your submission.</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  renderCardActions = () => {\n    const { currentView } = this.state;\n\n    return [\n      <IconButton onClick={this.onToggleView}>{currentView === VIEW_TILE ? MATERIAL_ICONS.VIEW_LIST : MATERIAL_ICONS.VIEW_MODULE}</IconButton>\n    ];\n  }\n\n  render() {\n    const { contentItems } = this.props;\n    const { false: excludedContentItems, true: includedContentItems } = _.groupBy(contentItems, 'isIncluded');\n\n    return (\n      <Card>\n        <CardTitle title={`My Content`} actions={this.renderCardActions()} />\n        <CardBody>\n          {this.renderExcludedContainer(excludedContentItems)}\n          {this.renderIncludedContainer(includedContentItems)}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nContentCard.propTypes = {\n  contentItems: PropTypes.array,\n};\n\nContentCard.defaultProps = {\n  contentItems: [],\n};\n\nexport default ContentCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport ContentCard from './ContentCard';\n\nimport './styles.scss';\n\nconst DEFAULT_STATE = {\n  contentItems: [],\n};\n\nconst CONTENT_TYPE_DOCUMENT = 'DOCUMENT';\nconst CONTENT_TYPE_IMAGE = 'IMAGE';\nconst CONTENT_TYPE_LINK = 'LINK';\nconst CONTENT_TYPE_VIDEO = 'VIDEO';\nconst CONTENT_TYPE_MEETING = 'MEETING';\n\nconst IMAGE_MIME_TYPES = ['image/png'];\n\nconst RESULT_PARTIAL_TYPENAME_MAPPING = {\n  ActivityResultPartialDocument: CONTENT_TYPE_DOCUMENT,\n  ActivityResultPartialLink: CONTENT_TYPE_LINK,\n  ActivityResultPartialMedia: CONTENT_TYPE_VIDEO,\n  ActivityResultPartialMeeting: CONTENT_TYPE_MEETING,\n};\n\nclass ContentCardController extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...DEFAULT_STATE,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { activityData } = props;\n    return {\n      contentItems: _.merge([], _.map(activityData.myData.resultPartials, ContentCardController.translateResultPartial), state.contentItems),\n    };\n  }\n\n  static translateResultPartial(resultPartial) {\n    const type = ContentCardController.translateType(resultPartial);\n    return {\n      id: resultPartial.dbId,\n      name: resultPartial.title,\n      media: resultPartial.media,\n      isIncluded: Boolean(resultPartial.finalizedAt),\n      imageUrl: ContentCardController.translatePreviewUrl(resultPartial),\n      type,\n      attributes: ContentCardController.getAttributes(resultPartial, type),\n    };\n  }\n\n  static getAttributes(resultPartial, type) {\n    let attrs = [];\n    switch (type) {\n      case CONTENT_TYPE_DOCUMENT:\n        attrs.push({ label: 'Type', value: resultPartial.mimeType });\n        break;\n      case CONTENT_TYPE_IMAGE:\n        attrs.push({ label: 'Type', value: resultPartial.mimeType });\n        break;\n      case CONTENT_TYPE_LINK:\n        attrs.push({ label: 'URL', value: resultPartial.link });\n        break;\n      case CONTENT_TYPE_VIDEO:\n        attrs.push({ label: 'Created', value: new Date() /* resultPartial.media.createdAt */ });\n        break;\n      case CONTENT_TYPE_MEETING:\n        attrs.push({ label: 'Date', value: new Date(resultPartial.scheduledAt) });\n        break;\n    }\n\n    return attrs;\n  }\n\n  static translateType(resultPartial) {\n    const contentType = RESULT_PARTIAL_TYPENAME_MAPPING[resultPartial.__typename];\n    if (contentType === CONTENT_TYPE_DOCUMENT) {\n      if (_.includes(IMAGE_MIME_TYPES, resultPartial.mimeType)) {\n        return CONTENT_TYPE_IMAGE;\n      }\n    }\n    return contentType;\n  }\n\n  static translatePreviewUrl(resultPartial) {\n    try {\n      return unescape(resultPartial.previewUrl.match(/^.*url\\=([^&]*)\\&/)[1]);\n    } catch (e) {}\n\n    return null;\n  }\n\n  getContentCardProps = () => {\n    const { contentItems } = this.state;\n    return {\n      contentItems: contentItems,\n    };\n  };\n\n  render() {\n    return (\n      <ContentCard\n        {...this.getContentCardProps()}\n        onChangeIncluded={(data) => {\n          const newContentItems = _.map(this.state.contentItems, (contentItem) => {\n            if (contentItem.id === data.id) {\n              return { ...contentItem, isIncluded: data.isIncluded };\n            }\n            return contentItem;\n          });\n\n          this.setState({\n            contentItems: newContentItems,\n          });\n        }}\n      />\n    );\n  }\n}\n\nContentCardController.propTypes = {\n  activityData: PropTypes.object,\n};\n\nContentCardController.defaultProps = {\n  activityData: null,\n};\n\nexport default ContentCardController;\n","import React, { Component } from 'react';\n// import { withRouter } from 'react-router'\n// import { connect } from 'react-redux';\n// import _ from 'lodash';\n\n\nimport ActivityService from 'student/services/activity';\nimport AssignmentIsBlockedCard from 'student/pages/activity/common/assignment-is-blocked-card';\nimport { Page } from 'common/components/page';\nimport Instructions from 'student/pages/activity/common/instructions';\nimport { IndivProgressDashboard } from 'student/pages/activity/individual/dashboard';\nimport StudentActivityToolbar from 'student/pages/activity/common/toolbar/StudentActivityToolbar';\n\nimport { ContentCardController } from './content-card';\n\nimport MockActivityData from './ActivityData-Example1.json';\n// import BONGO_ICONS from 'common/constants/bongo-icon-fonts';\n// import MATERIAL_ICONS from 'common/constants/material-icon-fonts';\n\nclass SubmissionPrototypePage extends Component {\n  state = {\n  }\n\n\n  render = () => {\n    // const { activityName, instructionsText, instructionsMedia, rubric } = this.props;\n\n\n    return (\n      <Page\n        title={`Submission Workflow Prototype`}\n        // serviceMethod={ActivityService.refreshIndividualProgressActivity}\n      >\n        {/* <StudentActivityToolbar />\n        <IndivProgressDashboard />\n        <AssignmentIsBlockedCard /> */}\n\n        {/* <Instructions title={`Instructions`}\n          media={instructionsMedia}\n          text={instructionsText}\n          rubric={rubric} /> */}\n\n        <ContentCardController activityData={MockActivityData.data.activity} />\n\n      </Page>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//   };\n// };\n\nexport default SubmissionPrototypePage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withI18n } from '@lingui/react';\n\nimport AudioAnalyzer from 'common/components/recorder/modules/audio-analyzer';\nimport RecorderService from 'common/components/recorder/service';\nimport { SelectField } from 'common/components/input';\nimport Stream from 'common/components/recorder/entity/stream';\nimport StreamGetter from 'common/components/recorder/utils/StreamGetter';\nimport WebRtcUploadStrategy from 'common/components/recorder/modules/upload-strategies/web-rtc';\n\nimport UPLOADER_EVENTS from 'common/components/recorder/modules/upload-strategies/constants/events';\nimport STREAM_NAMES from 'common/components/recorder/constants/streamNames';\nimport './styles.scss';\n\nconst AUDIO_THRESHOLD = 0.1;\n\n// This data needs to be replaced with system relevant information about\n// the activity and question so that we can get webrtc connection information\nconst ACTIVITY_ID = 731;\nconst QUESTION_ID = 336;\n\nconst MODES = { SIMPLE: 'simple', WEBRTC: 'webrtc' };\nconst modeMenuItems = [{ label: 'Basic Camera', value: MODES.SIMPLE }, { label: 'WebRTC', value: MODES.WEBRTC }];\n\nclass WebRTC extends Component {\n  state = {\n    destroyVideo: false,\n    audioLevel: 0,\n    currentMode: MODES.WEBRTC,\n    videoTrack: null,\n    audioTrack: null,\n    constraintThresholds: [],\n    constraintSucceessCount: 'N/A',\n  };\n\n  constructor(props) {\n    super(props);\n    this.localStreams = {};\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init = () => {\n    const { currentMode } = this.state;\n    switch (currentMode) {\n      case MODES.SIMPLE:\n        this.initBasicCamera();\n        break;\n      case MODES.WEBRTC:\n        this.initWebRTC();\n        break;\n    }\n  }\n\n  initBasicCamera = async () => {\n    const stream = await this.getUserMedia();\n    this.handleSuccess(stream);\n  };\n\n  initWebRTC = () => {\n    // this.enumerateDevices();\n    this.initUploadStrategy();\n  };\n\n  enumerateDevices = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    devices.forEach((device) => {\n      console.log(device); //eslint-disable-line\n    });\n    return devices;\n  };\n\n  getDevicesList = () => {\n    const devices = this.enumerateDevices();\n    let cameraStream = this.localStreams[STREAM_NAMES.CAMERA];\n    let microphoneStream = this.localStreams[STREAM_NAMES.MICROPHONE];\n    let microphoneId, cameraId;\n\n    if (cameraStream) {\n      microphoneId = cameraStream.getMicrophoneId(devices.audio);\n      cameraId = cameraStream.getCameraId(devices.video);\n    }\n\n    if (microphoneStream) {\n      microphoneId = microphoneStream.getMicrophoneId(devices.audio);\n    }\n\n    return { cameraId, microphoneId };\n  };\n\n  initUploadStrategy = async () => {\n    const settingsArgs = {\n      activityDbId: ACTIVITY_ID,\n      mediaType: 'TYPE__ACTIVITY_RESULT',\n      questionDbId: QUESTION_ID,\n    };\n\n    const settings = await RecorderService.getSettings(settingsArgs);\n    this.initUploader(settings);\n  };\n\n  initStreams = async () => {\n    let cameraId, microphoneId;\n    let currentlyUsedDevices = await this.getDevicesList();\n    cameraId = currentlyUsedDevices.cameraId;\n    microphoneId = currentlyUsedDevices.microphoneId;\n    this.getCameraStream({ cameraId, microphoneId });\n  };\n\n  getCameraStream = async ({ cameraId, microphoneId } = {}) => {\n    console.log('getting the camera stream'); //eslint-disable-line\n    try {\n      let localStream = this.localStreams[STREAM_NAMES.CAMERA];\n      if (localStream && localStream.stream && localStream.stream.active && localStream.cameraDeviceId === cameraId && localStream.microphoneDeviceId === microphoneId) {\n        return this.uploader.addStream(localStream);\n      }\n\n      if (this.localStreams[STREAM_NAMES.CAMERA]) {\n        this.localStreams[STREAM_NAMES.CAMERA].destroy();\n      }\n\n      const mediaStream = await StreamGetter.getCameraStream({ cameraId, microphoneId });\n      let stream = await this.getStream();\n\n      const cameraStream = new Stream({\n        stream: mediaStream,\n        streamName: STREAM_NAMES.CAMERA,\n      });\n\n      this.uploader.addStream(mediaStream);\n      this.localStreams[STREAM_NAMES.CAMERA] = cameraStream;\n      this.getDevicesList();\n\n      const video = document.getElementById('video-ele');\n      cameraStream.attachVideoToElement(video);\n      this.initAudioAnalyser(mediaStream);\n    } catch (error) {\n      console.log(error); //eslint-disable-line\n    }\n  };\n\n  getWebRTCStats = (pc) => {\n    setTimeout(() => {\n      pc.getStats().then((results) => {\n        // let videoInOrOutbound = {};\n        results.forEach((res) => {\n          if (res.kind && res.kind === 'audio') {\n            if (res.type && (res.type === 'inbound-rtp' || res.type === 'outbound-rtp')) {\n              console.log(res); //eslint-disable-line\n            }\n          }\n          // if (res.type === 'ssrc' || res.type === 'inbound-rtp' || res.type === 'outbound-rtp') {\n          //   res.packetsSent = parseInt(res.packetsSent);\n          //   res.packetsLost = parseInt(res.packetsLost) || 0;\n          //   res.packetsReceived = parseInt(res.packetsReceived);\n\n          //   if ((isNaN(res.packetsSent) && res.packetsReceived === 0)\n          //     || (res.type === 'outbound-rtp' && res.isRemote)) {\n          //     return; // Discard local video receiving\n          //   }\n\n          //   if (res.googFrameWidthReceived) {\n          //     res.width = parseInt(res.googFrameWidthReceived);\n          //     res.height = parseInt(res.googFrameHeightReceived);\n          //   } else if (res.googFrameWidthSent) {\n          //     res.width = parseInt(res.googFrameWidthSent);\n          //     res.height = parseInt(res.googFrameHeightSent);\n          //   }\n\n          //   // Extra fields available on Chrome\n          //   if (res.googCodecName) res.codec = res.googCodecName;\n          //   if (res.googDecodeMs) res.decodeDelay = res.googDecodeMs;\n          //   if (res.googEncodeUsagePercent) res.encodeUsagePercent = res.googEncodeUsagePercent;\n          //   if (res.googRtt) res.rtt = res.googRtt;\n          //   if (res.googCurrentDelayMs) res.currentDelay = res.googCurrentDelayMs;\n\n          //   videoInOrOutbound = res;\n          // }\n        });\n\n        //   const videoStats = {\n        //     timestamp: videoInOrOutbound.timestamp,\n        //     bytesReceived: videoInOrOutbound.bytesReceived,\n        //     bytesSent: videoInOrOutbound.bytesSent,\n        //     packetsReceived: videoInOrOutbound.packetsReceived,\n        //     packetsLost: videoInOrOutbound.packetsLost,\n        //     packetsSent: videoInOrOutbound.packetsSent,\n        //     decodeDelay: videoInOrOutbound.decodeDelay,\n        //     codec: videoInOrOutbound.codec,\n        //     height: videoInOrOutbound.height,\n        //     width: videoInOrOutbound.width,\n        //     encodeUsagePercent: videoInOrOutbound.encodeUsagePercent,\n        //     rtt: videoInOrOutbound.rtt,\n        //     currentDelay: videoInOrOutbound.currentDelay,\n        //   };\n\n        // response.forEach(function(report) {\n        //     // var standardStats = {\n        //     //     id: report.id,\n        //     //     type: report.type\n        //     // };\n        //     console.log(report); //eslint-disable-line\n        //     // report.names().forEach(function(name) {\n        //     //     standardStats[name] = report.stat(name);\n        //     // });\n        //     // standardReport[standardStats.id] = standardStats;\n        // });\n      });\n\n      this.getWebRTCStats(pc);\n    }, 5000);\n  };\n\n  getStream = async () => {\n    const stream = await this.getUserMedia();\n    return stream;\n  };\n\n  initUploader = (recorderSettings) => {\n    this.uploader = new WebRtcUploadStrategy({\n      settings: recorderSettings,\n      recorderType: 'test',\n      i18n: this.props.i18n,\n    });\n\n    this.uploader.init().catch();\n\n    this.uploader.on(UPLOADER_EVENTS.INITIALIZED, () => {\n      this.initStreams();\n    });\n\n    this.uploader.on(UPLOADER_EVENTS.REQUEST_NEW_STREAMS, () => {\n      this.initStreams();\n    });\n\n    this.uploader.on(UPLOADER_EVENTS.STREAM_ADDED, (stream) => {\n      const videoEle = document.getElementById('video-ele');\n      videoEle.srcObject = stream.stream;\n    });\n\n    this.uploader.on(UPLOADER_EVENTS.NOTIFICATION, () => {});\n\n    this.uploader.on(UPLOADER_EVENTS.RESET_STREAMS, () => {});\n\n    this.uploader.on(UPLOADER_EVENTS.RECORDING_PAUSED, () => {});\n\n    this.uploader.on(UPLOADER_EVENTS.RECORDING_RESUMED, () => {});\n\n    this.uploader.on(UPLOADER_EVENTS.RECORDING_STARTED, () => {});\n\n    this.uploader.on(UPLOADER_EVENTS.PREVIEW_IS_READY, (previews) => {});\n\n    this.uploader.on(UPLOADER_EVENTS.RECORDING_STOPPED, () => {});\n\n    this.uploader.on(UPLOADER_EVENTS.UPLOAD_FINISHED, () => {});\n\n    this.uploader.on(UPLOADER_EVENTS.UPLOADING_PROGRESS, (percent) => {});\n  };\n\n  getUserMedia = async () => {\n    await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n    const devices = await this.enumerateDevices();\n    this.setState({\n      devices,\n    });\n\n    // for(let i=0; i<devices.length; i++) {\n    //   const device = devices[i];\n    //   if(device.kind === 'videoinput' && device.label === 'Front Camera') {\n    //     deviceId = device.deviceId;\n    //   }\n    // }\n\n    let stream = await navigator.mediaDevices.getUserMedia({\n      // audio: true,\n      video: true,\n      // video: {\n      //   height: {\n      //     max: 720,\n      //   },\n      //   frameRate: {\n      //     max: 60,\n      //   },\n      // },\n      audio: {\n        sampleRate: 32000,\n      },\n    });\n    const videoTrack = stream.getVideoTracks()[0];\n    const audioTrack = stream.getAudioTracks()[0];\n\n    // this.adjustAudioTrackConstraints(audioTrack);\n\n    this.setState({\n      videoTrack,\n      audioTrack,\n    });\n\n    return stream;\n  };\n\n  adjustAudioTrackConstraints = (audioTrack) => {\n    const sampleRates = [8000, 16000, 32000, 44100, 48000, 96000];\n    let constraintThresholds = [];\n    let constraintSucceessCount = 0;\n    let previousSampleRate = 0;\n    sampleRates.forEach(async (i) => {\n      try {\n        const sampleRate = i;\n        // const sampleRate = {\n        //   ideal: i,\n        // };\n        // const sampleRate = {\n        //   min: i,\n        //   max: sampleRateMax,\n        // };\n        // const sampleRate = {\n        //   min: sampleRateMin,\n        //   max: i,\n        // };\n\n        const constraints = {\n          sampleRate,\n        };\n        await audioTrack.applyConstraints(constraints);\n        const settings = audioTrack.getSettings();\n        if (!(settings.sampleRate === previousSampleRate)) {\n          constraintThresholds.push(`sampleRate: ${JSON.stringify(constraints)} === actual=${settings.sampleRate}`);\n          previousSampleRate = settings.sampleRate;\n        }\n        constraintSucceessCount++;\n      } catch (e) {}\n    });\n\n    this.setState({\n      constraintThresholds,\n      constraintSucceessCount,\n    });\n  };\n\n  handleSuccess = (stream) => {\n    console.log(stream.getAudioTracks()[0].getSettings()); //eslint-disable-line\n    const video = document.getElementById('video-ele');\n    window.stream = stream; // make variable available to browser console\n    video.srcObject = stream;\n    this.initAudioAnalyser(stream);\n  };\n\n  initAudioAnalyser = (stream) => {\n    this.audioAnalyzer = new AudioAnalyzer(stream);\n    this.audioAnalyzer.onAudioLevelInfo((audioLevel) => {\n      if (audioLevel > AUDIO_THRESHOLD) {\n        this.setState({ audioLevel });\n        //console.log(audioLevel); //eslint-disable-line\n      }\n    });\n  };\n\n  resetVideo = () => {\n    this.localStreams = {};\n    this.setState(\n      {\n        destroyVideo: true,\n      },\n      () => {\n        this.setState(\n          {\n            destroyVideo: false,\n          },\n          () => {\n            this.init();\n          }\n        );\n      }\n    );\n  };\n\n  onModeChange = (mode) => {\n    this.setState(\n      {\n        currentMode: mode,\n      },\n      () => {\n        this.resetVideo();\n      }\n    );\n  };\n\n  render() {\n    const { destroyVideo, audioLevel, currentMode } = this.state;\n\n    let supportedConstraints = 'unknown';\n    let capabilitiesV = 'unknown',\n      constraintsV = 'unknown',\n      settingsV = 'unknown';\n    try {\n      supportedConstraints = JSON.stringify(navigator.mediaDevices.getSupportedConstraints(), null, 2);\n    } catch (e) {}\n    try {\n      capabilitiesV = JSON.stringify(this.state.videoTrack.getCapabilities(), null, 2);\n    } catch (e) {}\n    try {\n      constraintsV = JSON.stringify(this.state.videoTrack.getConstraints(), null, 2);\n    } catch (e) {}\n    try {\n      settingsV = JSON.stringify(this.state.videoTrack.getSettings(), null, 2);\n    } catch (e) {}\n\n    let capabilitiesA = 'unknown',\n      constraintsA = 'unknown',\n      settingsA = 'unknown';\n    try {\n      capabilitiesA = JSON.stringify(this.state.audioTrack.getCapabilities(), null, 2);\n    } catch (e) {}\n    try {\n      constraintsA = JSON.stringify(this.state.audioTrack.getConstraints(), null, 2);\n    } catch (e) {}\n    try {\n      settingsA = JSON.stringify(this.state.audioTrack.getSettings(), null, 2);\n    } catch (e) {}\n\n    return (\n      <div className='parent-container'>\n        {!destroyVideo && <video className='video-container' id='video-ele' autoPlay playsInline />}\n        <div className='controls-container'>\n          <SelectField id='mode-selection' label='Mode' onChange={this.onModeChange} value={currentMode} menuItems={modeMenuItems} />\n\n          <div className='info-container'>\n            <span>Last audio sample: {audioLevel.toFixed(3)}</span>\n          </div>\n          <div>\n            {this.state.devices\n              ? this.state.devices.map((device, index) => {\n                  return <div key={index}>{JSON.stringify(device)}</div>;\n                })\n              : 'no devices'}\n            <br />\n            <br />\n            Supported Constraints: {supportedConstraints}\n            <br />\n            <br />\n            VT Capabilities: {capabilitiesV}\n            <br />\n            <br />\n            VT Constraints: {constraintsV}\n            <br />\n            <br />\n            VT Settings: {settingsV}\n            <br />\n            <br />\n            AT Capabilities: {capabilitiesA}\n            <br />\n            <br />\n            AT Constraints: {constraintsA}\n            <br />\n            <br />\n            AT Settings: {settingsA}\n            <br />\n            <br />\n            {`Testing applyConstraints succeeded ${this.state.constraintSucceessCount} times`}\n            <br />\n            <br />\n            {this.state.constraintThresholds\n              ? this.state.constraintThresholds.map((threshold, index) => {\n                  return <div key={index}>{threshold}</div>;\n                })\n              : 'N/A'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withI18n()(connect()(WebRTC));\n","import { KEYS, VIEW_TYPES } from 'common/constants/launchpoint';\n\nconst FRAME_SOURCE = `${process.env.PUBLIC_URL}/launch`;\nconst QS = new URLSearchParams(window.location.search);\nconst LAUNCHPOINT_SETTTINGS = {\n  [KEYS.VIEW_TYPE]: QS.get(KEYS.VIEW_TYPE) || VIEW_TYPES.ACTIVITIES,\n  context: {\n    [KEYS.CONTEXT_USER_TYPE]: QS.get(KEYS.CONTEXT_USER_TYPE) || 'educator',\n    [KEYS.CONTEXT_CLASS_ID]: QS.get(KEYS.CONTEXT_CLASS_ID) || '0',\n    [KEYS.CONTEXT_ACTIVITY_ID]: '',\n    // [KEYS.CONTEXT_MEETING_ID]: '',\n  },\n  parameters: {\n    activity: {},\n    // meeting: {},\n  },\n};\n\nconst CUSTOMIZATION_SETTTINGS = {\n  capabilities: {},\n  preferences: {\n    theme: {\n      colors: {\n        'page-toolbar-background': 'rebeccapurple',\n      },\n      typography: {},\n    },\n  },\n};\n\nexport { FRAME_SOURCE, LAUNCHPOINT_SETTTINGS, CUSTOMIZATION_SETTTINGS };\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport { Button, FontIcon, TextField } from 'react-md';\n\nimport CustomizationService from 'common/services/customization';\n\nimport * as DEFAULTS from './defaults';\nimport './styles.scss';\n\nconst CLASSNAME_PREFIX = 'dev';\n\nclass LaunchWrapper extends Component {\n  state = {\n    iframe: {\n      path: '',\n      src: DEFAULTS.FRAME_SOURCE,\n      desiredLocation: '',\n    },\n    customizationSettings: {\n      isConfigVisible: false,\n      data: DEFAULTS.CUSTOMIZATION_SETTTINGS,\n      desiredData: '',\n    },\n    launchpointSettings: {\n      isConfigVisible: false,\n      data: DEFAULTS.LAUNCHPOINT_SETTTINGS,\n      desiredData: '',\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.iframeRef = React.createRef();\n    this.pathTextRef = React.createRef();\n    this.settingsContainerRef = React.createRef();\n\n    const basename = document.getElementById('root').dataset.basename;\n    this.pathPrefix = _.trimEnd(basename, '/');\n\n    this.initLaunchpointSettings();\n    this.initCustomizationSettings();\n  }\n\n  componentDidMount() {\n    const iframeElement = this.iframeRef.current;\n    const pathTextField = this.pathTextRef.current;\n    const pathTextInputElement = pathTextField.getField();\n    pathTextInputElement.addEventListener('keydown', this.onPathTextKeyDown);\n\n    setInterval(() => {\n      const { iframe, launchpointSettings, customizationSettings } = this.state;\n      if (launchpointSettings.isConfigVisible || customizationSettings.isConfigVisible) return;\n\n      try {\n        const newPath = iframeElement.contentWindow.location.pathname;\n        if (newPath !== iframe.path) {\n          this.setState({\n            iframe: {\n              ...iframe,\n              path: newPath\n            }\n          });\n\n          if (!newPath.match(new RegExp(`${this.pathPrefix}/launch`))) {\n            const route = this.extractRouteFromLocation(newPath);\n            this.setLaunchpointRouteOverride(route);\n          }\n        }\n      } catch (e) {\n        console.error(e);\n        this.setState({\n          iframe: {\n            ...iframe,\n            path: 'unknown'\n          }\n        });\n      }\n    }, 500);\n\n    iframeElement.contentWindow.addEventListener('mousedown', this.closeSettingConfigs);\n    window.addEventListener('mousedown', this.onWindowClick);\n\n  }\n\n  onWindowClick = (event) => {\n    if (!this.settingsContainerRef || !this.settingsContainerRef.current) return;\n\n    const settingsElement = this.settingsContainerRef.current;\n    const isClickWithinSettingsContain = settingsElement !== event.target && settingsElement.contains(event.target);\n\n    if (!isClickWithinSettingsContain) {\n      this.closeSettingConfigs();\n    }\n  }\n\n  closeSettingConfigs = () => {\n    const { launchpointSettings, customizationSettings } = this.state;\n    this.setState({\n      launchpointSettings: {\n        ...launchpointSettings,\n        isConfigVisible: false,\n      },\n      customizationSettings: {\n        ...customizationSettings,\n        isConfigVisible: false,\n      },\n    });\n  }\n\n  initLaunchpointSettings() {\n    let launchpointSettings = DEFAULTS.LAUNCHPOINT_SETTTINGS;\n    try {\n      const storedSettings = CustomizationService.getLaunchpointSettings();\n      if (storedSettings) {\n        const explicitRouteOverride = storedSettings['route'];\n        if (explicitRouteOverride) {\n          this.state.iframe.src = `${this.pathPrefix}${explicitRouteOverride}`;\n          delete storedSettings['route'];\n        }\n        launchpointSettings = storedSettings;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    CustomizationService.writeLaunchpointSettings(launchpointSettings);\n\n    this.state.launchpointSettings.data = JSON.stringify(launchpointSettings, null, 2);\n  }\n\n  initCustomizationSettings() {\n    let customizationSettings = DEFAULTS.CUSTOMIZATION_SETTTINGS;\n    try {\n      const storedSettings = CustomizationService.getCustomizationSettings();\n      if (storedSettings) {\n        customizationSettings = storedSettings;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    CustomizationService.writeCustomizationSettings(customizationSettings);\n\n    this.state.customizationSettings.data = JSON.stringify(customizationSettings, null, 2);\n  }\n\n  extractRouteFromLocation = (location) => {\n    let route = '';\n    const match = location.match(new RegExp(`${this.pathPrefix}(/.*)$`));\n    if (match && match.length >= 2) {\n      route = match[1];\n    }\n    return route;\n  }\n\n  setLaunchpointRouteOverride = (route) => {\n    const storedLaunchpointSettings = CustomizationService.getLaunchpointSettings();\n    CustomizationService.writeLaunchpointSettings({\n      ...storedLaunchpointSettings,\n      route: route,\n    });\n  }\n\n  changeFrameSource = (newSrc) => {\n    if (!newSrc) return;\n\n    const { iframe } = this.state;\n    this.setState({\n      iframe: {\n        ...iframe,\n        src: 'about:blank',\n        path: 'about:blank',\n        desiredLocation: '',\n      }\n    }, () => {\n      this.setState({\n        iframe: {\n          ...iframe,\n          src: newSrc,\n          path: newSrc,\n          desiredLocation: '',\n        }\n      });\n    });\n  }\n\n  onPathTextKeyDown = (e) => {\n    const { iframe } = this.state;\n    if (e.keyCode === 13) {\n      this.launchNewPath(iframe.desiredLocation);\n    }\n  }\n\n  onLocationTextChange = (newValue) => {\n    const { iframe } = this.state;\n    this.setState({\n      iframe: {\n        ...iframe,\n        desiredLocation: newValue\n      },\n    });\n  }\n\n  onLaunchpointSettingsConfigChange = (newValue) => {\n    const { launchpointSettings } = this.state;\n    this.setState({\n      launchpointSettings: {\n        ...launchpointSettings,\n        desiredData: newValue,\n      },\n    });\n  }\n\n  onLaunchpointSettingsClick = () => {\n    const { launchpointSettings, customizationSettings } = this.state;\n    this.setState({\n      launchpointSettings: {\n        ...launchpointSettings,\n        isConfigVisible: !launchpointSettings.isConfigVisible,\n      },\n      customizationSettings: {\n        ...customizationSettings,\n        isConfigVisible: false,\n      },\n    });\n  }\n\n  onApplyLaunchpointSettings = () => {\n    const { launchpointSettings } = this.state;\n\n    let newLaunchpointData = launchpointSettings.data;\n    if (launchpointSettings.desiredData) {\n      newLaunchpointData = launchpointSettings.desiredData\n    }\n    let settings = JSON.parse(newLaunchpointData);\n    delete settings['route'];\n    CustomizationService.writeLaunchpointSettings(settings);\n\n    this.setState({\n      launchpointSettings: {\n        ...launchpointSettings,\n        data: launchpointSettings.desiredData,\n        desiredData: null,\n        isConfigVisible: false,\n      },\n    });\n    this.changeFrameSource(DEFAULTS.FRAME_SOURCE);\n  }\n\n  onCustomizationSettingsConfigChange = (newValue) => {\n    const { customizationSettings } = this.state;\n    this.setState({\n      customizationSettings: {\n        ...customizationSettings,\n        desiredData: newValue,\n      },\n    });\n  }\n\n  onCustomizationSettingsClick = () => {\n    const { customizationSettings, launchpointSettings } = this.state;\n    this.setState({\n      customizationSettings: {\n        ...customizationSettings,\n        isConfigVisible: !customizationSettings.isConfigVisible,\n      },\n      launchpointSettings: {\n        ...launchpointSettings,\n        isConfigVisible: false,\n      },\n    });\n  }\n\n  onApplyCustomizationSettings = () => {\n    const { customizationSettings } = this.state;\n\n    let newCustomizationData = customizationSettings.data;\n    if (customizationSettings.desiredData) {\n      newCustomizationData = customizationSettings.desiredData\n    }\n    let settings = JSON.parse(newCustomizationData);\n    CustomizationService.writeCustomizationSettings(settings);\n\n    this.setState({\n      customizationSettings: {\n        ...customizationSettings,\n        data: customizationSettings.desiredData,\n        desiredData: null,\n        isConfigVisible: false,\n      }\n    });\n  }\n\n  onHomeClick = () => {\n    this.setLaunchpointRouteOverride(null);\n    this.changeFrameSource(DEFAULTS.FRAME_SOURCE);\n  }\n\n  onOpenInNewClick = (path) => {\n    const { hostname, port, protocol } = window.location;\n    window.open(`${protocol}//${hostname}:${port}${path}`);\n  }\n\n  launchNewPath = (desiredLocation) => {\n    const route = this.extractRouteFromLocation(desiredLocation)\n    this.setLaunchpointRouteOverride(route);\n    this.changeFrameSource(desiredLocation);\n  }\n\n  render() {\n    const { iframe, launchpointSettings, customizationSettings } = this.state;\n\n    const { desiredLocation, path } = iframe;\n    let pathTextValue = path;\n    let pathTextClasses = [`${CLASSNAME_PREFIX}-path-text`];\n    if (desiredLocation) {\n      pathTextValue = desiredLocation;\n      pathTextClasses.push(`${CLASSNAME_PREFIX}-path-text--dirty`);\n    }\n\n    let launchpointSettingsConfigValue = launchpointSettings.data;\n    if (launchpointSettings.desiredData) {\n      launchpointSettingsConfigValue = launchpointSettings.desiredData;\n    }\n\n    let customizationSettingsConfigValue = customizationSettings.data;\n    if (customizationSettings.desiredData) {\n      customizationSettingsConfigValue = customizationSettings.desiredData;\n    }\n\n    return (\n      <div className='dev-container'>\n        <div className='dev-content'>\n\n          <div className='dev-top'>\n            <div className={`${CLASSNAME_PREFIX}-path-container`}>\n              <Button className={cx([`${CLASSNAME_PREFIX}-button`, `${CLASSNAME_PREFIX}-launch-button`])}\n                flat={true}\n                primary={true}\n                onClick={this.onHomeClick}>\n                {<FontIcon>{'home'}</FontIcon>}\n              </Button>\n              <Button className={cx([`${CLASSNAME_PREFIX}-button`, `${CLASSNAME_PREFIX}-open-new-window`])}\n                flat={true}\n                primary={true}\n                onClick={() => { \n                  this.onOpenInNewClick(pathTextValue)\n                }}>\n                {<FontIcon>{'open_in_new'}</FontIcon>}\n              </Button>\n              <TextField\n                ref={this.pathTextRef}\n                id={`${CLASSNAME_PREFIX}-path-text`}\n                className={cx(pathTextClasses)}\n                onChange={this.onLocationTextChange}\n                placeholder={`URL`}\n                value={pathTextValue}\n              />\n              <Button className={cx([`${CLASSNAME_PREFIX}-button`, `${CLASSNAME_PREFIX}-go-button`])}\n                flat={true}\n                primary={true}\n                disabled={!Boolean(desiredLocation)}\n                onClick={() => {\n                  this.launchNewPath(desiredLocation)\n                }}>\n                {`Go`}\n              </Button>\n            </div>\n            <div className={`${CLASSNAME_PREFIX}-settings-container`} ref={this.settingsContainerRef}>\n\n              <Button className={cx([`${CLASSNAME_PREFIX}-button`, `${CLASSNAME_PREFIX}-settings-button`])}\n                flat={true}\n                primary={true}\n                onClick={this.onLaunchpointSettingsClick}>\n                {`Launchpoint`} <FontIcon>{launchpointSettings.isConfigVisible ? 'arrow_drop_up' : 'arrow_drop_down'}</FontIcon>\n              </Button>\n              {\n                launchpointSettings.isConfigVisible &&\n                <div className={`${CLASSNAME_PREFIX}-settings-config-container`}>\n                  <span>bongo-launchpoint-settings:</span>\n                  <TextField\n                    id={`${CLASSNAME_PREFIX}-settings-config-text`}\n                    className={`${CLASSNAME_PREFIX}-settings-config-text`}\n                    onChange={this.onLaunchpointSettingsConfigChange}\n                    placeholder={''}\n                    rows={10}\n                    maxRows={30}\n                    value={launchpointSettingsConfigValue}\n                  />\n                  <div className={`${CLASSNAME_PREFIX}-settings-config-bottom`}>\n                    <Button className={cx([`${CLASSNAME_PREFIX}-button`, `${CLASSNAME_PREFIX}-apply-button`])}\n                      flat={true}\n                      primary={true}\n                      disabled={!Boolean(launchpointSettings.desiredData)}\n                      onClick={this.onApplyLaunchpointSettings}>\n                      {`Apply & /launch`}\n                    </Button>\n                  </div>\n\n                </div>\n              }\n\n              <Button className={cx([`${CLASSNAME_PREFIX}-button`, `${CLASSNAME_PREFIX}-settings-button`])}\n                flat={true}\n                primary={true}\n                onClick={this.onCustomizationSettingsClick}>\n                {`Customization`} <FontIcon>{customizationSettings.isConfigVisible ? 'arrow_drop_up' : 'arrow_drop_down'}</FontIcon>\n              </Button>\n              {\n                customizationSettings.isConfigVisible &&\n                <div className={`${CLASSNAME_PREFIX}-settings-config-container`}>\n                  <span>bongo-customization-settings:</span>\n                  <TextField\n                    id={`${CLASSNAME_PREFIX}-settings-config-text`}\n                    className={`${CLASSNAME_PREFIX}-settings-config-text`}\n                    onChange={this.onCustomizationSettingsConfigChange}\n                    placeholder={''}\n                    rows={10}\n                    maxRows={30}\n                    value={customizationSettingsConfigValue}\n                  />\n                  <div className={`${CLASSNAME_PREFIX}-settings-config-bottom`}>\n                    <Button className={cx([`${CLASSNAME_PREFIX}-button`, `${CLASSNAME_PREFIX}-apply-button`])}\n                      flat={true}\n                      primary={true}\n                      disabled={!Boolean(customizationSettings.desiredData)}\n                      onClick={this.onApplyCustomizationSettings}>\n                      {`Apply & Close`}\n                    </Button>\n                  </div>\n\n                </div>\n              }\n            </div>\n\n          </div>\n          <div className='dev-iframe-container'>\n            <iframe ref={this.iframeRef} id='dev-iframe-bongo' className='dev-iframe' frameBorder='0' scrolling='auto' allow='microphone *; camera *'\n              src={iframe.src}>\n            </iframe>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default LaunchWrapper;\n","import React, { Component } from 'react';\nimport LaunchWrapper from './LaunchWrapper';\n\nclass Launch extends Component {\n\n  render() {\n    return (\n      <LaunchWrapper />\n    );\n  }\n}\n\nexport default Launch;\n","import Default from './pages/default';\nimport SubmissionPrototype from './pages/submission-prototype';\nimport WebRTC from './pages/webrtc';\nimport Launch from './pages/launch';\n\nexport default {\n  '/dev/submission-prototype': SubmissionPrototype,\n  '/dev/launch': Launch,\n  '/dev/webrtc': WebRTC,\n  '/dev': Default,\n};\n"],"sourceRoot":""}