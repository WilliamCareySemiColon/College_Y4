--part one
CREATE (e21:Person { name: "Tom", country:"Spain", age: 28, sport: "Footbal" });

MATCH (e:Person {name:"Tom"}),(r:Person {name:"Mary"})
CREATE(e)-[:FRIEND_OF]->(r);

--part two
CREATE (e22:Person { name: "Bill", country:"Ireland", age: 23, sport: ""});

MATCH (e:Person {name:"Bill"}),(r:Person {name:"Mary"}),(s:Person {name:"Mary"})
CREATE(e)-[:FRIEND_OF]->(r), (e)-[:FRIEND_OF]->(s);

--part three
MATCH(e:Person {name:"Denis"})-[:FRIEND_OF*1..3]->(e2:Person) 
RETURN e.name,e.age,e2.name, e2.age;

--part four
MATCH (p:Person {country:"Scotland"})return p;

--part five
MATCH(P:Person{country:"Ireland"})WHERE P.age < 21 return P;

--part 6
MATCH(P:Person{sport:"Football"})WHERE P.age < 31 return P;

--part 7
MATCH(e:Person) RETURN count(e.country),e.country;

--part 8
MATCH(e:Person) RETURN AVG(e.age),e.sport;

--part 9
MATCH(P:Person{name:"Mary"})-[:FRIEND_OF*1]->(Q:Person)return Q;

--part 10
MATCH(P:Person{name:"Paul"})-[:FRIEND_OF*..5]->(Q:Person)return Q;

--part 11
MATCH(P:Person{name:"Paul"})-[:FRIEND_OF*..5]->(Q:Person)
return count(Q.country), Q.country;
--part 12
MATCH 
path = (e:Person {name:"Paul"})-[:FRIEND_OF*..5]->(m:Person {name:"Lisa"})
RETURN path,count(path),length(path)
--part 13
MATCH 
path = shortestpath((e:Person {name:"Paul"})-[:FRIEND_OF*..5]->(m:Person {name:"Lisa"}))
RETURN path
--part 14